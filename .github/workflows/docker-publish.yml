name: Docker Image CI for Jobcan Mate

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-push-and-cleanup-ghcr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/jobcan-mate
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.description=Automates Jobcan clock-in/out. Supports multi-arch (amd64, arm64), holiday detection, and Telegram notifications.
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.version=${{ github.sha }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          org.opencontainers.image.licenses=MIT
          org.opencontainers.image.title=Jobcan Mate
          org.opencontainers.image.created=${{ steps.meta.outputs.createdAt }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Cleanup GHCR container images
      uses: dataaxiom/ghcr-cleanup-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        owner: ${{ github.repository_owner }}
        repository: ${{ github.event.repository.name }} # 'name'에서 'repository'로 변경
        exclude-tags: "latest" # 'keep_tags_patterns' 대신 사용, 'latest' 태그 보호
        keep-n-tagged: 3 # 'keep_tags' 대신 사용, 최신 태그 3개 유지
