apiVersion: v1
kind: ConfigMap
metadata:
  name: jobcan-mate-config
  namespace: default # Or your target namespace
data:
  config.json: |-
    {
      "jobcan": {
        "loginUrl": "https://id.jobcan.jp/users/sign_in?app_key=atd",
        "attendanceUrl": "https://ssl.jobcan.jp/employee",
        "loginCredentials": {
          "envFilePath": ".env",
          "emailXPath": "//*[@id='user_email']",
          "passwordXPath": "//*[@id='user_password']",
          "loginButtonXPath": "//*[@id='login_button']"
        },
        "attendanceButtonXPath": "//*[@id='adit-button-push']",
        "workingStatusXPath": "//*[@id='working_status']"
      },
      "workHours": {
        "weekdaysOnly": true,
        "checkInTime": "08:00",
        "checkOutTime": "17:00"
      },
      "scheduler": {
        "enabled": true,
        "delayInMinutes": {
          "checkIn": -10,
          "checkOut": 5
        },
        "timezone": "Asia/Seoul"
      },
      "playwright": {
        "headless": true
      },
      "appSettings": {
        "testMode": false,
        "messageLanguage": "ko"
      },
      "calendar": {
        "holidayCalendarUrl": "https://calendar.google.com/calendar/ical/ko.south_korea%23holiday%40group.v.calendar.google.com/public/basic.ics",
        "annualLeaveKeyword": "연차"
      }
    }
---
# IMPORTANT: Create the Secret manually using your actual .env file.
# The .env file itself will be stored as a key in the Secret.
# Example command (replace with your actual .env file path and namespace):
# kubectl create secret generic jobcan-mate-secret --from-file=.env=./.env -n default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobcan-mate-deployment
  namespace: default # Or your target namespace
  labels:
    app: jobcan-mate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jobcan-mate
  template:
    metadata:
      labels:
        app: jobcan-mate
    spec:
      containers:
      - name: jobcan-mate
        image: ghcr.io/itswryu/jobcan-mate:latest # Ensure this matches your GHCR image path
        imagePullPolicy: Always # Or IfNotPresent, depending on your update strategy
        ports:
        - containerPort: 80 # Though this app doesn't expose a port, it's good practice if it did
        volumeMounts:
        - name: config-volume
          mountPath: /usr/src/app/config.json
          subPath: config.json # Mounts the 'config.json' key from the ConfigMap
        - name: env-volume # Mount for the .env file
          mountPath: /usr/src/app/.env # Path where the .env file will be available in the container
          subPath: .env # The key in the Secret that holds the .env file content (created via --from-file=.env=...)
      volumes:
      - name: config-volume
        configMap:
          name: jobcan-mate-config
      - name: env-volume # Volume for the .env file from Secret
        secret:
          secretName: jobcan-mate-secret # Name of the Secret you created
      restartPolicy: Always
